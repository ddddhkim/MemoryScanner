#include <stdio.h>
#include <Windows.h>

#include "PatternScanner.h"


typedef PatternScanner::pNode pNode;


int main(int argc, char* argv[]) {

	BYTE Pattern[0x40] = {0x74, 0x37, 0x8B, 0x40, 0x04, 0x85, 0xC0, 0x74, 0x30, 0x4C, 0x39, 0xAB, 0x30, 0x02, 0x00, 0x00, 0x74, 0x27, 0x48, 0x8B, 0x83, 0x28, 0x02, 0x00, 0x00, 0x48, 0x85, 0xC0, 0x74, 0x10, 0x8B, 0x40, 0x04, 0x85, 0xC0, 0x74, 0x09, 0x48, 0x8B, 0x8B, 0x30, 0x02, 0x00, 0x00, 0xEB, 0x03, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x40, 0x84, 0xF6, 0x74, 0x1D, 0x8B, 0x55 };

	PatternScanner Test(L"Test.exe");

	pNode* link = Test.GetLinkedList();
	Test.FindPattern(link, Pattern, "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx???????????xxxxxxx");

	
	for (pNode* temp = link; temp->ptr != NULL; temp = temp->next) {
		printf("[%d] find address : 0x%08llx\n", (DWORD)temp->pid, (DWORD64)temp->ptr);
	}

	if (Test.PatchPlace(link->pid, link->ptr, Pattern, 0x40) == 0) {
		MessageBoxA(0, "Patched !!", "Success", 0);
	}
	else{
		MessageBoxA(0, "Please, Try Again :D", "Error", 0);
	}
	
	return 0;
}